/* ------------------------------------
						Global Mixins
						------------------------------------ */


/// Palceholder

@mixin placeholder {
	&::-webkit-input-placeholder { @content; }
	&::-moz-placeholder          { @content; }
	&:-ms-input-placeholder      { @content; }
}


/// Selector checked

@mixin selectorChecked ($checked, $n, $path, $enumerate) {

	@for $i from 1 to $n+1 {
		$newPath: selector-replace($path, $enumerate, $enumerate + '('+ $i + ')');

		#{$checked}#{unquote('-selector:nth-of-type')}(#{$i})#{unquote(':checked')}#{unquote('~')} #{$newPath} {
			@content;
		}
	}
}


/// Sprite Background SVG

// Set the `$sprite` map
$sprite: map-get($icons, sprite) !default;

// Retrive an attributes value for a specific icon in the sprite map
@function sprite-attr($icon, $attr) {
	$newIcon: map-get($icons, $icon);
	@if $newIcon == null {
		@warn "Can't find an icon with the name #{$icon}";
	}
	@return map-get($newIcon, $attr);
}

// Create a map with the specified icon of attributes
@function icon-attr($icon) {
	$attr: (
		width: sprite-attr($icon, width),
		height: sprite-attr($icon, height),
		x: sprite-attr($icon, backgroundX),
		y: sprite-attr($icon, backgroundY)
		);

	@return $attr;
}

@mixin sprite($icon) {
	$iconMap: icon-attr($icon);
	width: map-get($iconMap, width);
	height: map-get($iconMap, height);
	background-position: map-get($iconMap, x) map-get($iconMap, y);
}

// vertical-align at center
@mixin center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
}

// gradient
@mixin gradient ($gradient, $img: false) {
	@if($img) {
		background: $gradient, $img;
	} @else {
		background: $gradient;
	}
}